spring.datasource.name=db
spring.datasource.initialize=false
spring.datasource.driverClassName=org.h2.Driver

spring.datasource.url=jdbc:h2:file:~/db;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto= update

spring.h2.console.enabled=true
# default path: h2-console
spring.h2.console.path=/h2
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enabling H2 Console
#spring.h2.console.enabled=true

# Custom H2 Console URL
#spring.h2.console.path=/h2-console

# Whether to enable trace output.
#spring.h2.console.settings.trace=false 

# Whether to enable remote access.
#spring.h2.console.settings.web-allow-others=false

# By default, the in-memory databases are volatile, and all stored
# data will be lost when we restart the application. In this case,
# data is written in temporary memory, and as soon as JVM is stopped,
# data is flushed.

# To have a persistent data store capable of storing data between
# application start/stop, we should hold the data in files. For 
# this change the spring.datasource.url property. (see below)
